$(document).ready(function() {
	let intervalSetter = setInterval(function () {
		let user = JSON.parse(sessionStorage.getItem("user"));
		if (user) {
			clearInterval(intervalSetter); // Stop checking once data is available
			if(user.name) $("#name").val(user.name);
			if(user.partner_name) $("#pname").val(user.partner_name);
			if(user.address) $("#address").val(user.address);
			$("#email").val(user.email);
			$("#emailid").val(user.email);
			//handle update button 
			$("#Update").on("click", function() { updateUser(user); });
		}
	}, 1000);
});

async function updateUser(user) {
	event.preventDefault();
	let name = $("#name").val();
	let partnerName = $("#pname").val();
	let address = $("#address").val();
	let validationSuccess = 0;
	(!name.trim()) ? $("#error-name").html("This Field is required.") : validationSuccess++; 
	(!partnerName.trim()) ? $("#error-pname").html("This Field is required.") : validationSuccess++;
	(!address.trim()) ? $("#error-address").html("This Field is required.") : validationSuccess++;
	if (validationSuccess === 3) {
		const requestData = {
			id: user.id,
            name: name,
            partnerName: partnerName,
            address: address
        };
       try {
           const response = await fetch('/user/update', {
			method: 'POST',
	        headers: { 'Content-Type': 'application/json' },
	        body: JSON.stringify(requestData)
           });
           const data = await response.json();
           if (data.success) {
			   location.reload();
           } else {
               alert("Update Failed.");
           }
       } catch (error) {
           console.log(error);
           alert(error.message);
       }
   }
}